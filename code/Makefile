#!/usr/bin/make -f

COMPILATEUR=gcc
DEPLACER=mv
FAIRE_REPERTOIRE=mkdir
CHANGER_REPERTOIRE=cd
COMMANDE_DOCUMENTATION=doxygen
SUPPRIMER_DOSSIER=rm -Rf
SUPPRIMER_FICHIER=rm -f
COPIER_DOSSIER=cp -r
COMPRESSER=zip
AFFICHER=echo

SOURCES_DOSSIER=/src
BIN_DOSSIER=/bin
DOCUMENTATION_DOSSIER=/doc
SAUVEGARDE_DOSSIER=/sauvegarde
FICHIER_RACINE=.

FLAGS=-Wall -ansi -pedantic
OPTIONS=-lm
FLAGS_COMPRESSION=-qr
FLAGS_DOCUMENTATION=-g

NOM_PROGRAMME=main
FICHIER_CONFIGURATION_DOCUMENTATION=Doxyfile
ARCHIVE=TP_RIGAUX_David_GI1C2.zip

PROGRAMME=$(FICHIER_RACINE)$(BIN_DOSSIER)/$(NOM_PROGRAMME)
SOURCES=$(wildcard $(FICHIER_RACINE)$(SOURCES_DOSSIER)/*.c)
OBJETS=$(addsuffix .o, $(basename $(subst $(FICHIER_RACINE)$(SOURCES_DOSSIER), $(FICHIER_RACINE)$(BIN_DOSSIER), $(SOURCES))))
HEADER_RACINE=$(wildcard $(FICHIER_RACINE)/*.h)
SOURCES_RACINE=$(wildcard $(FICHIER_RACINE)/*.c)
OBJETS_RACINE=$(wildcard $(FICHIER_RACINE)/*.o)

PASSER_TERMINAL_VERT=\033[32m
PASSER_TERMINAL_BLEU=\033[34m
PASSER_TERMINAL_ROUGE=\033[31m
PASSER_TERMINAL_NORMAL=\033[0m
REDIRECTION_SORTIE_COMMANDE=1> /dev/null

.PHONY : all
ifeq ($(SOURCES_RACINE),)
all : deplacerFichiersRacine faireDocumentation lancer
else
all : deplacerFichiersRacine relancerMakefile
endif

$(PROGRAMME) : $(OBJETS)
	@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Compilation de $@$(PASSER_TERMINAL_ROUGE)"
	@$(COMPILATEUR) $(FLAGS) $^ -o $@ $(OPTIONS)
	@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

$(FICHIER_RACINE)$(BIN_DOSSIER)/%.o : $(FICHIER_RACINE)$(SOURCES_DOSSIER)/%.c
		@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Compilation de $@$(PASSER_TERMINAL_ROUGE)"
		@$(COMPILATEUR) $(FLAGS) -o $@ -c $< $(OPTIONS)
		@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

.PHONY : vider
vider :
	@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Nettoyage des dossiers$(PASSER_TERMINAL_ROUGE)"
	@$(SUPPRIMER) $(OBJETS) $(PROGRAMME)
	@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

.PHONY : lancer
lancer : $(PROGRAMME) compresserDossier
	@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Lancement du programme$(PASSER_TERMINAL_BLEU)\n"
	@./$(PROGRAMME)
	@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

.PHONY : deplacerFichiersRacine
deplacerFichiersRacine : creerDossier
	@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Déplacement des fichiers à la racine$(PASSER_TERMINAL_ROUGE)"
	@if [ "$(SOURCES_RACINE)" != "" ]; then $(DEPLACER) $(SOURCES_RACINE) $(FICHIER_RACINE)$(SOURCES_DOSSIER); fi
	@if [ "$(HEADER_RACINE)" != "" ]; then $(DEPLACER) $(HEADER_RACINE) $(FICHIER_RACINE)$(SOURCES_DOSSIER); fi
	@if [ "$(OBJETS_RACINE)" != "" ]; then $(DEPLACER) $(OBJETS_RACINE) $(FICHIER_RACINE)$(BIN_DOSSIER); fi
	@if [ -f "$(FICHIER_RACINE)/$(NOM_PROGRAMME)" ]; then $(DEPLACER) $(NOM_PROGRAMME) $(FICHIER_RACINE)$(BIN_DOSSIER); fi
	@if [ -f "$(FICHIER_RACINE)/$(FICHIER_CONFIGURATION_DOCUMENTATION)" ]; then $(DEPLACER) $(FICHIER_RACINE)/$(FICHIER_CONFIGURATION_DOCUMENTATION) $(FICHIER_RACINE)$(DOCUMENTATION_DOSSIER); fi
	@if [ -f "$(FICHIER_RACINE)/$(FICHIER_CONFIGURATION_DOCUMENTATION).bak" ]; then $(DEPLACER) $(FICHIER_RACINE)/$(FICHIER_CONFIGURATION_DOCUMENTATION).bak $(FICHIER_RACINE)$(DOCUMENTATION_DOSSIER); fi
	@if [ -d "html" ]; then $(DEPLACER) html $(FICHIER_RACINE)$(DOCUMENTATION_DOSSIER); fi
	@if [ -d "latex" ]; then $(DEPLACER) latex $(FICHIER_RACINE)$(DOCUMENTATION_DOSSIER); fi
	@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

.PHONY : relancerMakefile

relancerMakefile :
	@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Relancement du script$(PASSER_TERMINAL_NORMAL)"
	@$(MAKE)

.PHONY : creerDossier
creerDossier :
	@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Création des dossiers$(PASSER_TERMINAL_ROUGE)"
	@if [ ! -d "$(FICHIER_RACINE)$(SOURCES_DOSSIER)" ]; then $(FAIRE_REPERTOIRE) $(FICHIER_RACINE)$(SOURCES_DOSSIER); fi
	@if [ ! -d "$(FICHIER_RACINE)$(BIN_DOSSIER)" ]; then $(FAIRE_REPERTOIRE) $(FICHIER_RACINE)$(BIN_DOSSIER); fi
	@if [ ! -d "$(FICHIER_RACINE)$(DOCUMENTATION_DOSSIER)" ]; then $(FAIRE_REPERTOIRE) $(FICHIER_RACINE)$(DOCUMENTATION_DOSSIER); fi
	@if [ ! -d "$(FICHIER_RACINE)$(BIN_DOSSIER)" ]; then $(FAIRE_REPERTOIRE) $(FICHIER_RACINE)$(BIN_DOSSIER); fi
	@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

.PHONY : faireDocumentation
faireDocumentation : viderDossierDocumentation
	@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Création de la documentation$(PASSER_TERMINAL_ROUGE)"
	@$(CHANGER_REPERTOIRE) $(FICHIER_RACINE)$(SOURCES_DOSSIER)/; $(COMMANDE_DOCUMENTATION) $(FLAGS_DOCUMENTATION) $(FICHIER_CONFIGURATION_DOCUMENTATION) $(REDIRECTION_SORTIE_COMMANDE); $(COMMANDE_DOCUMENTATION) $(FICHIER_CONFIGURATION_DOCUMENTATION) $(REDIRECTION_SORTIE_COMMANDE)
	@if [ -f "$(FICHIER_RACINE)$(SOURCES_DOSSIER)/$(FICHIER_CONFIGURATION_DOCUMENTATION)" ]; then $(SUPPRIMER_FICHIER) "$(FICHIER_RACINE)$(SOURCES_DOSSIER)/$(FICHIER_CONFIGURATION_DOCUMENTATION)"; fi
	@if [ -f "$(FICHIER_RACINE)$(SOURCES_DOSSIER)/$(FICHIER_CONFIGURATION_DOCUMENTATION).bak" ]; then $(SUPPRIMER_FICHIER) "$(FICHIER_RACINE)$(SOURCES_DOSSIER)/$(FICHIER_CONFIGURATION_DOCUMENTATION).bak"; fi
	@if [ -d "$(FICHIER_RACINE)$(SOURCES_DOSSIER)/html" ]; then $(DEPLACER) $(FICHIER_RACINE)$(SOURCES_DOSSIER)/html $(FICHIER_RACINE)$(DOCUMENTATION_DOSSIER)/; fi
	@if [ -d "$(FICHIER_RACINE)$(SOURCES_DOSSIER)/latex" ]; then $(DEPLACER) $(FICHIER_RACINE)$(SOURCES_DOSSIER)/latex $(FICHIER_RACINE)$(DOCUMENTATION_DOSSIER)/; fi
	@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

.PHONY : viderDossierDocumentation
viderDossierDocumentation :
	@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Nettoyage du fichier documentation$(PASSER_TERMINAL_ROUGE)"
	@$(SUPPRIMER_DOSSIER) $(FICHIER_RACINE)$(DOCUMENTATION_DOSSIER)/*
	@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

.PHONY : compresserDossier
compresserDossier: supprimerArchive
	@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Création de l'archive$(PASSER_TERMINAL_ROUGE)"
	@$(COMPRESSER) $(FLAGS_COMPRESSION) $(ARCHIVE) $(FICHIER_RACINE)
	@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

.PHONY : supprimerArchive
supprimerArchive :
		@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Suppression de l'archive$(PASSER_TERMINAL_ROUGE)"
		@if [ -f "$(FICHIER_RACINE)/$(ARCHIVE)" ]; then $(SUPPRIMER_FICHIER) "$(FICHIER_RACINE)/$(ARCHIVE)"; fi
		@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

.PHONY : sauvegarde
sauvegarde :
		@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Sauvegarde des sources$(PASSER_TERMINAL_ROUGE)"
		@if [ -d "$(FICHIER_RACINE)$(SAUVEGARDE_DOSSIER)" ]; then $(SUPPRIMER_DOSSIER) $(FICHIER_RACINE)$(SAUVEGARDE_DOSSIER); fi
		@if [ -d "$(FICHIER_RACINE)$(SOURCES_DOSSIER)" ]; then $(COPIER_DOSSIER) $(FICHIER_RACINE)$(SOURCES_DOSSIER) $(FICHIER_RACINE)$(SAUVEGARDE_DOSSIER); fi
		@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"

.PHONY : restorer
restorer :
	@$(AFFICHER) "$(PASSER_TERMINAL_VERT)Restoration des sources$(PASSER_TERMINAL_ROUGE)"
	@if [ -d "$(FICHIER_RACINE)$(SOURCES_DOSSIER)" ]; then $(SUPPRIMER_DOSSIER) $(FICHIER_RACINE)$(SOURCES_DOSSIER); fi
	@if [ -d "$(FICHIER_RACINE)$(SAUVEGARDE_DOSSIER)" ]; then $(COPIER_DOSSIER) $(FICHIER_RACINE)$(SAUVEGARDE_DOSSIER) $(FICHIER_RACINE)$(SOURCES_DOSSIER); fi
	@$(AFFICHER) "$(PASSER_TERMINAL_NORMAL)"
